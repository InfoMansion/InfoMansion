# upstream docker-react {
#     least_conn;
#     # server react-1:3000;
#     server localhost:3001;
# }

# upstream docker-spring {
#     # server spring-1:8080;
#     server localhost:8081;
# }

# server {
#     listen 80;
#     listen [::]:80;

#     location / {
#         proxy_pass http://docker-react;
#     }

#     location /api {
#         proxy_pass http://docker-spring;
#     }

# }

worker_processes 4;

events { worker_connections 1024; }

http {
  upstream react {
    least_conn;
    server react-1:3000 weight=10 max_fails=3 fail_timeout=30s;
    server react-2:3000 weight=10 max_fails=3 fail_timeout=30s;
  }

  upstream spring {
    least_conn;
    server spring-1:8080 weight=10 max_fails=3 fail_timeout=30s;
    server spring-2:8080 weight=10 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80;

    location / {
      proxy_pass http://react;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    location /api {
      proxy_pass http://spring;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}